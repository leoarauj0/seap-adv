/* eslint-disable @next/next/no-img-element */
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { api } from "../../services/api";
import { Header } from "../components/Header";
import styles from "../styles/Home.module.scss";
import Footer from "../components/Footer";

import { Input, Button, Tooltip, Modal, Form, Radio, Spin } from "antd";
import {
  PicLeftOutlined,
  DownOutlined,
  UpOutlined,
  LoadingOutlined,
} from "@ant-design/icons";
import "antd/dist/antd.css";
import onNotification from "../components/Notificacao/Notificacao";

const { Search } = Input;

const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;

const onSearch = (value: any) => {};

type Livros = {
  id: number;
  titulo: string;
  sub: string;
  descricao: string;
  dataCadastro: string;
  locado: string;
  file: {
    url: string;
  };
};

const Home: NextPage = () => {
  const [loading, setLoading] = useState(false);
  const [livros, setLivros] = useState([]);
  const [agente, setAgente] = useState([]);
  const [detento, setDetento] = useState([]);
  const [tipoUsuario, setTipoUsuario] = useState("");
  const [modalRetirarVisivel, setModalRetirarVisivel] = useState(false);
  const [buttonLoad, setButtonLoad] = useState(false);

  const [form] = Form.useForm();

  const pesquisarMatricula = async (id: any) => {
    try {
      setLoading(true);
      const response = await api.get(`/agentes/${id}`);

      // setAgente(response.data.find((item: any) => item.id === id));

      console.log(response.data);

      setLoading(false);
    } catch (err) {
      onNotification("error", {
        message: "Error!",
        description: "Erro ao buscar agente",
      });
    }
  };

  const pesquisarMatriculaDetento = (value: any) => {};

  const mostraModalRetirar = () => {
    setModalRetirarVisivel(true);
  };

  const handleOk = () => {
    setModalRetirarVisivel(false);
  };

  const handleCancel = () => {
    setModalRetirarVisivel(false);
    form.resetFields();
    setTipoUsuario("");
  };

  useEffect(() => {
    buscaLivros();
  }, []);

  const buscaLivros = async () => {
    const response = await api.get("livros", {
      params: {
        // _limit: 7,
        _sort: "titulo",
        _order: "desc",
      },
    });

    setLivros(response.data);
    console.log(response.data);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Biblioteca Seap</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.homepage}>
        <section className={styles.listaLivros}>
          <h2>Acervo de Livros</h2>

          <Search
            placeholder="Pesquisar"
            onSearch={onSearch}
            style={{ width: 400 }}
          />
          <br />
          <br />
          <table cellSpacing={0}>
            <thead>
              <tr>
                <th></th>
                <th>Código</th>
                <th>Titulo</th>
                <th>Subtitulo</th>
                <th>Data de Cadastro</th>
                <th>Locado</th>
                <th>Detalhes</th>
                <th>Opções</th>
              </tr>
            </thead>
            <tbody>
              {livros.map((item: Livros) => {
                // eslint-disable-next-line react/jsx-key
                return (
                  <tr key={item.id}>
                    <td>
                      <img
                        src={item.file.url}
                        alt="foto"
                        width={40}
                        height={40}
                        // layout="responsive"
                        // objectFit="cover"
                      />
                    </td>
                    <td>
                      <span>{item.id}</span>
                    </td>
                    <td>
                      <span>{item.titulo}</span>
                    </td>
                    <td>
                      <span>{item.sub}</span>
                    </td>
                    <td>
                      <span>{item.dataCadastro}</span>
                    </td>
                    <td>
                      {item.locado === "true" ? (
                        <span>Sim</span>
                      ) : (
                        <span>Não</span>
                      )}
                    </td>
                    <td>
                      <Link href={`/livros/${item.id}`} key={item.id}>
                        <Tooltip
                          placement="left"
                          title={"Detalhes"}
                          color={"#04d361"}
                        >
                          <Button>
                            <PicLeftOutlined />
                          </Button>
                        </Tooltip>
                      </Link>
                    </td>
                    <td>
                      {item.locado === "true" ? (
                        <Link href={`/livros/${item.id}`} key={item.id}>
                          <Tooltip
                            placement="left"
                            title={"Receber"}
                            color={"#04d361"}
                          >
                            <Button
                              type="primary"
                              style={{ background: "#04d361" }}
                            >
                              <DownOutlined />
                            </Button>
                          </Tooltip>
                        </Link>
                      ) : (
                        // <Link href={`/livros/${item.id}`} key={item.id}>
                        <Tooltip
                          placement="left"
                          title={"Retirar"}
                          color={"#04d361"}
                        >
                          <Button
                            type="primary"
                            style={{ background: "#08979c" }}
                            onClick={mostraModalRetirar}
                          >
                            <UpOutlined />
                          </Button>
                        </Tooltip>
                        // </Link>
                      )}
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </section>
      </div>
      <Footer />
      <Modal
        title="Emprestimo de Livro"
        visible={modalRetirarVisivel}
        onOk={handleOk}
        onCancel={handleCancel}
        footer={
          [
            // <Button
            //   key="submit"
            //   type="primary"
            //   // loading={loading}
            //   onClick={handleOk}
            // >
            //   Submit
            // </Button>,
          ]
        }
      >
        <Spin indicator={antIcon} spinning={loading}>
          <Form
            // {...formItemLayout}
            layout="vertical"
            form={form}
            // initialValues={{ layout: formLayout }}
            // onValuesChange={onFormLayoutChange}
          >
            <Form.Item name="tipoPessoa" label="Usuário">
              <Radio.Group>
                <Radio
                  value={"detento"}
                  onChange={() => {
                    setTipoUsuario("Detento");
                  }}
                >
                  Detento
                </Radio>
                <Radio
                  value={"agente"}
                  onChange={() => {
                    setTipoUsuario("Agente");
                  }}
                >
                  Agente
                </Radio>
              </Radio.Group>
            </Form.Item>
            {tipoUsuario === "Detento" ? (
              <Form.Item name="idPessoa" label="Pesquisar Matricula">
                <Search
                  placeholder="Insira a matricula do detento"
                  onSearch={pesquisarMatriculaDetento}
                  style={{ width: "100%" }}
                />
              </Form.Item>
            ) : tipoUsuario === "Agente" ? (
              <Form.Item name="idPessoa" label="Pesquisar Matricula">
                <Search
                  placeholder="Insira a matricula"
                  onSearch={pesquisarMatricula}
                  style={{ width: "100%" }}
                />
              </Form.Item>
            ) : null}
            <Form.Item
            // {...buttonItemLayout}
            >
              <Button
                type="primary"
                htmlType="submit"
                style={{ width: "100%" }}
                loading={buttonLoad}
                onClick={() => form.resetFields()}
              >
                Confirmar
              </Button>
            </Form.Item>
          </Form>
        </Spin>
      </Modal>
    </div>
  );
};

export default Home;
