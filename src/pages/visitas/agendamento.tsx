/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
import { useCallback, useState, useContext } from "react";
import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { api } from "../../../services/api";
import Footer from "../../components/Footer";
import styles from "./login.module.scss";
// import Logo from "../../../public/logo.svg";

import {
  Input,
  Button,
  Form,
  Checkbox,
  Modal,
  Select,
  Spin,
  Divider,
  Row,
  Col,
  DatePicker,
  Tabs,
  TimePicker,
} from "antd";

const { Option } = Select;

import {
  BarsOutlined,
  LeftOutlined,
  PoweroffOutlined,
} from "@ant-design/icons";
import "antd/dist/antd.css";
import { Header } from "../../components/Header";
import onNotification from "../../components/Notificacao/Notificacao";
import { AutenticadoContext } from "../../context/AuthContext";

// import MenuLateral from '../../components/template/Menu/NavBarVisita'
import { CalendarOutlined } from "@ant-design/icons";

import Background from "../../assets/image/back-seap-online-web.png";
import Logo from "../../assets/image/seap-online-logo.png";
import LogoGoverno from "../../assets/image/logo-governo.png";
// import { validateMessages2, CpfRequired } from '../../utils/ValidatorFields'
// import { rowProps } from '../../utils/FormUtils'
const FormItem = Form.Item;

// import { useDadosPessoaisVisita } from '../../hooks/dadosPessoaisVisita'
import MaskedInput from "antd-mask-input";
// import api, { apiVisitas } from '../../services/api'
// import onNotification from '../../components/notification/Notification'
import { AxiosResponse } from "axios";
// import { setCookie } from 'nookies'

const PreSenha = () => {
  // const { getDadosVisita } = useDadosPessoaisVisita()
  const [loading, setLoading] = useState(false);
  const [form] = Form.useForm();
  const router = useRouter();
  // const { Title } = Typography;

  // const save = async (data) => {
  //   setLoading(true)
  //   try {
  //     const response: AxiosResponse = await apiVisitas.get(
  //       'visita-virtual-service/visitantes',
  //       {
  //         params: {
  //           cpf: data.cpf.replaceAll('.', '').replace('-', ''),
  //           matricula: data.matricula
  //         }
  //       }
  //     )
  //     getDadosVisita({
  //       matricula: response.data.idPessoaVisitante,
  //       nomeVisita: response.data.nome
  //     })

  //     console.log(response.headers)
  //     setCookie(
  //       undefined,
  //       'agendar-visita-token',
  //       response?.headers?.authorization?.replaceAll('Bearer ', ''),
  //       {
  //         maxAge: 60 * 60 * 24 * 30,
  //         path: '/'
  //       }
  //     )

  //     router.push(`/visitas/menuTelaDeVisita`)
  //   } catch (error: any) {
  //     getDadosVisita({})
  //     setLoading(true)
  //     if (error?.response?.status === 500) {
  //       setLoading(false)
  //       return onNotification('error', {
  //         message: 'ERROR!',
  //         description: error.response.data.userMessage
  //       })
  //     }
  //     onNotification('error', {
  //       message: 'ERROR!',
  //       description: 'Erro ao Encontrar CPF ou Matricula'
  //     })
  //     setLoading(false)
  //   }
  // }

  return (
    <>
      <Head>
        <title>Biblioteca Seap</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/seap-juris/logo.png" />
      </Head>

      <Header login={false} />
      <main className={styles.main}>
        <img
          width={150}
          src="/seap-juris/logo.svg"
          style={{
            marginBottom: "3rem",
          }}
        />
        <div className={styles.card}>
          <Tabs defaultActiveKey="1">
            <Tabs.TabPane tab="Visita ao Interno" key="1">
              <Spin tip="Carregando..." spinning={loading}>
                <Form
                  form={form}
                  layout="vertical"
                  // onFinish={save}
                  // validateMessages={validateMessages2}
                >
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="nome"
                        label="Nome do Interno"
                        rules={[{ required: true }]}
                        hasFeedback
                      >
                        <Select
                          showSearch
                          placeholder="Selecione o Nome do Interno"
                          onSelect={(e: any) => {
                            // handleSelect(e);
                          }}
                        >
                          <Option key="lol" value="lol">
                            Fulano da Silva Solsa
                          </Option>
                        </Select>
                      </FormItem>
                    </Col>
                  </Row>
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="data"
                        label="Data"
                        hasFeedback
                        // style={{ maxWidth: '300px', width: '300px' }}
                      >
                        <DatePicker
                          style={{ width: "100%" }}
                          format={"DD/MM/YYYY"}
                          allowClear
                          showToday
                          disabled={false}

                          // className="ant-input-login"
                        />
                      </FormItem>
                    </Col>
                  </Row>
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="prioridade"
                        label="Prioridade"
                        rules={[{ required: true }]}
                        hasFeedback
                      >
                        <Select
                          showSearch
                          placeholder="Selecione a sua Prioridade"
                          // onChange={changePrioridade}
                        >
                          <Option key="sim" value={true}>
                            Sim
                          </Option>
                          <Option key="nao" value={false}>
                            Não
                          </Option>
                        </Select>
                      </FormItem>
                    </Col>
                  </Row>

                  <Button
                    htmlType="submit"
                    // type="primary"
                    style={{
                      width: "100%",
                      marginTop: "10px",
                      background: "#000b6b",
                      color: "#fff",
                    }}
                  >
                    AGENDAR
                  </Button>
                  <Button
                    htmlType="button"
                    // type="primary"
                    style={{
                      width: "100%",
                      marginTop: "10px",
                      background: "#000b6b",
                      color: "#fff",
                    }}
                    onClick={() => router.push(`/visitas/menuTelaDeVisita`)}
                    icon={<LeftOutlined />}
                  >
                    VOLTAR
                  </Button>
                </Form>
              </Spin>
            </Tabs.TabPane>
            <Tabs.TabPane tab="Visita à Direção" key="2">
              <Spin tip="Carregando..." spinning={loading}>
                <Form
                  form={form}
                  layout="vertical"
                  // onFinish={save}
                  // validateMessages={validateMessages2}
                >
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="unidade"
                        label="Unidade"
                        rules={[{ required: true }]}
                        hasFeedback
                      >
                        <Select
                          showSearch
                          placeholder="Selecione a Unidade"
                          onSelect={(e: any) => {
                            // handleSelect(e);
                          }}
                        >
                          <Option key="unidade1" value="unidade1">
                            Unidade 1
                          </Option>
                          <Option key="unidade2" value="unidade2">
                            Unidade 2
                          </Option>
                          <Option key="unidade3" value="unidade3">
                            Unidade 3
                          </Option>
                          <Option key="unidade4" value="unidade4">
                            Unidade 4
                          </Option>
                          <Option key="unidade5" value="unidade5">
                            Unidade 5
                          </Option>
                          <Option key="unidade7" value="unidade7">
                            Unidade 7
                          </Option>
                        </Select>
                      </FormItem>
                    </Col>
                  </Row>
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="data"
                        label="Data"
                        hasFeedback
                        // style={{ maxWidth: '300px', width: '300px' }}
                      >
                        <DatePicker
                          style={{ width: "100%" }}
                          format={"DD/MM/YYYY"}
                          allowClear
                          showToday
                          disabled={false}

                          // className="ant-input-login"
                        />
                      </FormItem>
                    </Col>
                  </Row>
                  <Row>
                    <Col span={24}>
                      <FormItem
                        name="horario"
                        label="Horario"
                        rules={[{ required: true }]}
                        hasFeedback
                      >
                        <TimePicker
                          style={{ width: "100%" }}
                          format={"HH"}
                          allowClear
                          showNow={false}
                          // showHour
                          disabled={false}

                          // className="ant-input-login"
                        />
                      </FormItem>
                    </Col>
                  </Row>

                  <Button
                    htmlType="submit"
                    // type="primary"
                    style={{
                      width: "100%",
                      marginTop: "10px",
                      background: "#000b6b",
                      color: "#fff",
                    }}
                  >
                    AGENDAR
                  </Button>
                  <Button
                    htmlType="button"
                    // type="primary"
                    style={{
                      width: "100%",
                      marginTop: "10px",
                      background: "#000b6b",
                      color: "#fff",
                    }}
                    onClick={() => router.push(`/visitas/menuTelaDeVisita`)}
                    icon={<LeftOutlined />}
                  >
                    VOLTAR
                  </Button>
                </Form>
              </Spin>
            </Tabs.TabPane>
          </Tabs>
        </div>
      </main>

      <Footer />
    </>
  );
};

export default PreSenha;
